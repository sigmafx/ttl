/* 4-BIT COUNTER -VE CLOCK, CLR HI */

typedef unsigned char TTL7493_PINS;

#define TTL7493_CLK     (1 << 0)
#define TTL7493_CLR1    (1 << 1)
#define TTL7493_CLR2    (1 << 2)
#define TTL7493_CLKPRE  (1 << 3)
#define TTL7493_Q0      (1 << 4)
#define TTL7493_Q1      (1 << 5)
#define TTL7493_Q2      (1 << 6)
#define TTL7493_Q3      (1 << 7)
#define TTL7493_IN      (TTL7493_CLK|TTL7493_CLR1|TTL7493_CLR2|TTL7493_CLKPRE|TTL7493_Q0|TTL7493_Q1|TTL7493_Q2|TTL7493_Q3)

#define TTL7493_INIT    0b00000000
#define TTL7493_ACT(p) (TTL7493[(p)&TTL7493_IN])

#define TTL7493_SET_CLK(p) ((p)|=TTL7493_CLK)
#define TTL7493_RESET_CLK(p) ((p)&=~TTL7493_CLK)
#define TTL7493_PUT_CLK(p,t) ((p)&=~TTL7493_CLK,(p)|=((t)?TTL7493_CLK:0))
#define TTL7493_SET_CLR1(p) ((p)|=TTL7493_CLR1)
#define TTL7493_RESET_CLR1(p) ((p)&=~TTL7493_CLR1)
#define TTL7493_SET_CLR2(p) ((p)|=TTL7493_CLR2)
#define TTL7493_RESET_CLR2(p) ((p)&=~TTL7493_CLR2)

#define TTL7493_GET_Q0(p) ((p)&TTL7493_Q0)
#define TTL7493_GET_Q1(p) ((p)&TTL7493_Q1)
#define TTL7493_GET_Q2(p) ((p)&TTL7493_Q2)
#define TTL7493_GET_Q3(p) ((p)&TTL7493_Q3)

TTL7493_PINS TTL7493[] = {
    0b00000000,
    0b00001001,
    0b00000010,
    0b00001011,
    0b00000100,
    0b00001101,
    0b00000110,
    0b00001111,
    0b00010000,
    0b00001001,
    0b00010010,
    0b00001011,
    0b00010100,
    0b00001101,
    0b00000110,
    0b00001111,
    0b00010000,
    0b00011001,
    0b00010010,
    0b00011011,
    0b00010100,
    0b00011101,
    0b00000110,
    0b00001111,
    0b00100000,
    0b00011001,
    0b00100010,
    0b00011011,
    0b00100100,
    0b00011101,
    0b00000110,
    0b00001111,
    0b00100000,
    0b00101001,
    0b00100010,
    0b00101011,
    0b00100100,
    0b00101101,
    0b00000110,
    0b00001111,
    0b00110000,
    0b00101001,
    0b00110010,
    0b00101011,
    0b00110100,
    0b00101101,
    0b00000110,
    0b00001111,
    0b00110000,
    0b00111001,
    0b00110010,
    0b00111011,
    0b00110100,
    0b00111101,
    0b00000110,
    0b00001111,
    0b01000000,
    0b00111001,
    0b01000010,
    0b00111011,
    0b01000100,
    0b00111101,
    0b00000110,
    0b00001111,
    0b01000000,
    0b01001001,
    0b01000010,
    0b01001011,
    0b01000100,
    0b01001101,
    0b00000110,
    0b00001111,
    0b01010000,
    0b01001001,
    0b01010010,
    0b01001011,
    0b01010100,
    0b01001101,
    0b00000110,
    0b00001111,
    0b01010000,
    0b01011001,
    0b01010010,
    0b01011011,
    0b01010100,
    0b01011101,
    0b00000110,
    0b00001111,
    0b01100000,
    0b01011001,
    0b01100010,
    0b01011011,
    0b01100100,
    0b01011101,
    0b00000110,
    0b00001111,
    0b01100000,
    0b01101001,
    0b01100010,
    0b01101011,
    0b01100100,
    0b01101101,
    0b00000110,
    0b00001111,
    0b01110000,
    0b01101001,
    0b01110010,
    0b01101011,
    0b01110100,
    0b01101101,
    0b00000110,
    0b00001111,
    0b01110000,
    0b01111001,
    0b01110010,
    0b01111011,
    0b01110100,
    0b01111101,
    0b00000110,
    0b00001111,
    0b10000000,
    0b01111001,
    0b10000010,
    0b01111011,
    0b10000100,
    0b01111101,
    0b00000110,
    0b00001111,
    0b10000000,
    0b10001001,
    0b10000010,
    0b10001011,
    0b10000100,
    0b10001101,
    0b00000110,
    0b00001111,
    0b10010000,
    0b10001001,
    0b10010010,
    0b10001011,
    0b10010100,
    0b10001101,
    0b00000110,
    0b00001111,
    0b10010000,
    0b10011001,
    0b10010010,
    0b10011011,
    0b10010100,
    0b10011101,
    0b00000110,
    0b00001111,
    0b10100000,
    0b10011001,
    0b10100010,
    0b10011011,
    0b10100100,
    0b10011101,
    0b00000110,
    0b00001111,
    0b10100000,
    0b10101001,
    0b10100010,
    0b10101011,
    0b10100100,
    0b10101101,
    0b00000110,
    0b00001111,
    0b10110000,
    0b10101001,
    0b10110010,
    0b10101011,
    0b10110100,
    0b10101101,
    0b00000110,
    0b00001111,
    0b10110000,
    0b10111001,
    0b10110010,
    0b10111011,
    0b10110100,
    0b10111101,
    0b00000110,
    0b00001111,
    0b11000000,
    0b10111001,
    0b11000010,
    0b10111011,
    0b11000100,
    0b10111101,
    0b00000110,
    0b00001111,
    0b11000000,
    0b11001001,
    0b11000010,
    0b11001011,
    0b11000100,
    0b11001101,
    0b00000110,
    0b00001111,
    0b11010000,
    0b11001001,
    0b11010010,
    0b11001011,
    0b11010100,
    0b11001101,
    0b00000110,
    0b00001111,
    0b11010000,
    0b11011001,
    0b11010010,
    0b11011011,
    0b11010100,
    0b11011101,
    0b00000110,
    0b00001111,
    0b11100000,
    0b11011001,
    0b11100010,
    0b11011011,
    0b11100100,
    0b11011101,
    0b00000110,
    0b00001111,
    0b11100000,
    0b11101001,
    0b11100010,
    0b11101011,
    0b11100100,
    0b11101101,
    0b00000110,
    0b00001111,
    0b11110000,
    0b11101001,
    0b11110010,
    0b11101011,
    0b11110100,
    0b11101101,
    0b00000110,
    0b00001111,
    0b11110000,
    0b11111001,
    0b11110010,
    0b11111011,
    0b11110100,
    0b11111101,
    0b00000110,
    0b00001111,
    0b00000000,
    0b11111001,
    0b00000010,
    0b11111011,
    0b00000100,
    0b11111101,
    0b00000110,
    0b00001111,
};
